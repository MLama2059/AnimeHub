@page "/"
@inject HttpClient Http
@inject NavigationManager Navigation

    @* <div class="container-fluid">
    <div class="row">
        <div class="col-12 hero-section text-center text-white">
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h1 class="display-3 fw-bold mb-3">Welcome to AnimeHub</h1>
                <p class="lead">Your destination for all things anime. Discover, rate, and explore a world of stories.</p>
            </div>
        </div>
    </div>
</div> *@

<div class="container my-4">
    <div class="row">
        <div class="col-12 hero-section text-center text-white">
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h1 class="display-3 fw-bold mb-3">Welcome to AnimeHub</h1>
                <p class="lead">Your destination for all things anime. Discover, rate, and explore a world of stories.</p>

                <div class="hero-cta">
                    <a class="btn btn-warning" href="anime-catalog">Browse Anime</a>
                    <a class="btn btn-outline-light" href="anime-catalog?sort=trending">
                        <i class="fa-solid fa-fire"></i>&nbsp;Trending
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="row pt-5">
        <div class="col-12 section-card">
            <h3 class="fw-bold mb-5 section-title">Top Rated Anime</h3>

            <div class="col-12">
                <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4 justify-content-center">
                    @if (IsLoading)
                    {
                        @for (int i = 0; i < 5; i++)
                        {
                            <div class="col d-flex justify-content-center">
                                <AnimeCardSkeleton />
                            </div>
                        }
                    }
                    else if (TopRatedAnimes != null && TopRatedAnimes.Any())
                    {
                        @foreach (var anime in TopRatedAnimes)
                        {
                            <div class="col d-flex justify-content-center">
                                <AnimeCard Anime="anime" />
                            </div>
                        }
                    }
                    else
                    {
                        <p>No top-rated anime to display.</p>
                    }
                </div>
            </div>
        </div>

        

        <div class="row mt-5">
            <div class="col-12 text-center">
                <h3 class="fw-bold mb-4">Browse by Category</h3>
            </div>
            <div class="col-12">
                <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3 justify-content-center">
                    @if (Categories != null && Categories.Any())
                    {
                        foreach (var category in Categories)
                        {
                            <div class="col d-flex justify-content-center">
                                <a href="category/@category.Id" class="btn btn-outline-secondary w-100">@category.Name</a>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No categories to display.</p>
                    }
                </div>
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-12 text-center">
                <h3 class="fw-bold mb-4">Browse by Genre</h3>
            </div>
            <div class="col-12 mb-3">
                <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3 justify-content-center">
                    @if (Genres != null && Genres.Any())
                    {
                        foreach (var genre in Genres)
                        {
                            <div class="col d-flex justify-content-center">
                                <a href="genre/@genre.Id" class="btn btn-outline-secondary w-100">@genre.Name</a>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No genres to display.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private bool IsLoading { get; set; } = true;
    private List<AnimeListReadDto>? TopRatedAnimes { get; set; }
    private List<CategoryReadDto>? Categories { get; set; }
    private List<GenreReadDto>? Genres { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var topRatedAnimes = Http.GetFromJsonAsync<List<AnimeListReadDto>>("api/anime/top");
            var categories = Http.GetFromJsonAsync<List<CategoryReadDto>>("api/category");
            var genres = Http.GetFromJsonAsync<List<GenreReadDto>>("api/genre");

            await Task.WhenAll(topRatedAnimes, categories, genres);

            TopRatedAnimes = topRatedAnimes.Result;
            Categories = categories.Result;
            Genres = genres.Result;

        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while fetching home page data: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }
    }
}