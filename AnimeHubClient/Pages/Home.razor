@page "/"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container-fluid p-0">
    <div class="row">
        <div class="col-12 hero-section text-center text-white">
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h1 class="display-3 fw-bold mb-3">Welcome to AnimeHub</h1>
                <p class="lead">Your destination for all things anime. Discover, rate, and explore a world of stories.</p>
            </div>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col">
            <h3 class="fw-bold mb-4">Top Rated Anime</h3>
        </div>

        <div class="col-12">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4 justify-content-center">
                @if (IsLoading)
                {
                    @for (int i = 0; i < 5; i++)
                    {
                        <div class="col d-flex justify-content-center">
                            <div class="card anime-card border-0">
                                <div class="skeleton skeleton-image"></div>
                                @* <div class="skeleton skeleton-text-line mt-3 mx-auto"></div> *@

                                <div class="card-body">
                                    <h5 class="skeleton skeleton-text-line mx-auto"></h5>
                                    @* <p class="skeleton skeleton-text-line-short"></p>
                                    <div class="skeleton skeleton-button"></div> *@
                                </div>
                            </div>
                        </div>
                    }
                }
                else if (TopRatedAnimes != null && TopRatedAnimes.Any())
                {
                    @foreach (var anime in TopRatedAnimes)
                    {
                        <div class="col d-flex justify-content-center">
                            <div class="card anime-card border-0">
                                <a href="anime/@anime.Id"><img src="@(Http.BaseAddress?.ToString() + anime.ImageUrl)" class="card-img-top anime-img-top" alt="@anime.Title" /></a>
                                @* <a href="anime/@anime.Id" class="text-decoration-none"><h6 class="card-title fw-bold text-truncate mt-3 text-muted">@anime.Title</h6></a> *@

                                <div class="card-body">
                                    <a href="anime/@anime.Id" class="text-decoration-none"><h6 class="card-title fw-bold text-truncate text-muted">@anime.Title</h6></a>

                                    @* <h6 class="card-title text-truncate">@anime.Title</h6>
                                    <p class="card-text text-muted mb-1"><i class="bi bi-star-fill" style="color: orange"></i> @anime.Rating</p>
                                    <a href="anime/@anime.Id" class="btn btn-primary mt-2">View Details</a> *@
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No top-rated anime to display.</p>
                }
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-12 text-center">
                <h3 class="fw-bold mb-4">Browse by Category</h3>
            </div>
            <div class="col-12">
                <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3 justify-content-center">
                    @if (Categories != null && Categories.Any())
                    {
                        foreach (var category in Categories)
                        {
                            <div class="col d-flex justify-content-center">
                                <a href="category/@category.Id" class="btn btn-outline-secondary w-100">@category.Name</a>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No categories to display.</p>
                    }
                </div>
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-12 text-center">
                <h3 class="fw-bold mb-4">Browse by Genre</h3>
            </div>
            <div class="col-12">
                <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3 justify-content-center">
                    @if (Genres != null && Genres.Any())
                    {
                        foreach (var genre in Genres)
                        {
                            <div class="col d-flex justify-content-center">
                                <a href="genre/@genre.Id" class="btn btn-outline-secondary w-100">@genre.Name</a>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No genres to display.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private bool IsLoading { get; set; } = true;
    private List<AnimeReadDto>? TopRatedAnimes { get; set; }
    private List<CategoryReadDto>? Categories { get; set; }
    private List<GenreReadDto>? Genres { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            TopRatedAnimes = await Http.GetFromJsonAsync<List<AnimeReadDto>>("api/anime/top");
            Categories = await Http.GetFromJsonAsync<List<CategoryReadDto>>("api/category");
            Genres = await Http.GetFromJsonAsync<List<GenreReadDto>>("api/genre");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while fetching home page data: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
        }
    }
}