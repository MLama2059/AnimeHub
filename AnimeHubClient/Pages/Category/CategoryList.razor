@page "/category"
@using AnimeHub.Shared.Models.Dtos.Category
@inject HttpClient Http

@if (IsProcessing)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="col-12 text-end">
                <a href="category/create" class="btn btn-lg btn-secondary"><i class="bi bi-plus-square"></i> Add New Category</a>
            </div>
        </div>
        @if (Categories != null && Categories.Any())
        {
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Categories)
                    {
                        <tr>
                            <td>
                                @category.Name
                            </td>
                            <td>
                                <a href="@($"category/update/{category.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i> Edit</a>
                                <button class="btn btn-danger"><i class="bi bi-trash"></i> Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private List<CategoryReadDto>? Categories;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
        try
        {
            Categories = await Http.GetFromJsonAsync<List<CategoryReadDto>>("api/category");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error fetching category data: {ex.Message}");
        }
    }
}
